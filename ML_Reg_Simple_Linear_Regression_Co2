{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/bilalsarimeseli/Linear_Regression_Cost_Function/blob/main/ML_Reg_Simple_Linear_Regression_Co2\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "button": false,
        "new_sheet": false,
        "run_control": {
          "read_only": false
        },
        "id": "G9GeDxGz-vx5"
      },
      "source": [
        "<p style=\"text-align:center\">\n",
        "    <a href=\"https://skills.network/?utm_medium=Exinfluencer&utm_source=Exinfluencer&utm_content=000026UJ&utm_term=10006555&utm_id=NA-SkillsNetwork-Channel-SkillsNetworkCoursesIBMDeveloperSkillsNetworkML0101ENSkillsNetwork1047-2023-01-01\">\n",
        "    <img src=\"https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/assets/logos/SN_web_lightmode.png\" width=\"200\" alt=\"Skills Network Logo\"  />\n",
        "    </a>\n",
        "</p>\n",
        "\n",
        "\n",
        "# Simple Linear Regression\n",
        "\n",
        "## Objectives\n",
        "\n",
        "* Use scikit-learn to implement Linear Regression\n",
        "* Create a model, train it, test it and use the model\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "button": false,
        "new_sheet": false,
        "run_control": {
          "read_only": false
        },
        "id": "fsHtfFw_-vx7"
      },
      "source": [
        "### Importing Needed packages\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "button": false,
        "new_sheet": false,
        "run_control": {
          "read_only": false
        },
        "id": "U4k8UX-K-vx8"
      },
      "outputs": [],
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import pandas as pd\n",
        "import pylab as pl\n",
        "import numpy as np\n",
        "%matplotlib inline"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "button": false,
        "new_sheet": false,
        "run_control": {
          "read_only": false
        },
        "id": "CAOx988O-vx8"
      },
      "source": [
        "### Downloading Data\n",
        "To download the data, we will use !wget to download it from IBM Object Storage.\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 2,
      "metadata": {
        "button": false,
        "new_sheet": false,
        "run_control": {
          "read_only": false
        },
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "YeSecthM-vx9",
        "outputId": "70c30d8c-04d0-49b4-a0de-47325fd4e5a5"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "--2023-09-26 06:02:45--  https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-ML0101EN-SkillsNetwork/labs/Module%202/data/FuelConsumptionCo2.csv\n",
            "Resolving cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud (cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud)... 169.63.118.104\n",
            "Connecting to cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud (cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud)|169.63.118.104|:443... connected.\n",
            "HTTP request sent, awaiting response... 200 OK\n",
            "Length: 72629 (71K) [text/csv]\n",
            "Saving to: ‘FuelConsumption.csv’\n",
            "\n",
            "\rFuelConsumption.csv   0%[                    ]       0  --.-KB/s               \rFuelConsumption.csv 100%[===================>]  70.93K  --.-KB/s    in 0.01s   \n",
            "\n",
            "2023-09-26 06:02:45 (7.08 MB/s) - ‘FuelConsumption.csv’ saved [72629/72629]\n",
            "\n"
          ]
        }
      ],
      "source": [
        "!wget -O FuelConsumption.csv https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-ML0101EN-SkillsNetwork/labs/Module%202/data/FuelConsumptionCo2.csv"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "pDJplm75-vx9"
      },
      "source": [
        "__Did you know?__ IBM is offering a unique opportunity for businesses, with 10 Tb of IBM Cloud Object Storage: [Sign up now for free](http://cocl.us/ML0101EN-IBM-Offer-CC)\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "button": false,
        "new_sheet": false,
        "run_control": {
          "read_only": false
        },
        "id": "_4-O2jKr-vx9"
      },
      "source": [
        "\n",
        "## Understanding the Data\n",
        "\n",
        "### `FuelConsumption.csv`:\n",
        "We have downloaded a fuel consumption dataset, **`FuelConsumption.csv`**, which contains model-specific fuel consumption ratings and estimated carbon dioxide emissions for new light-duty vehicles for retail sale in Canada. [Dataset source](http://open.canada.ca/data/en/dataset/98f1a129-f628-4ce4-b24d-6f16bf24dd64?utm_medium=Exinfluencer&utm_source=Exinfluencer&utm_content=000026UJ&utm_term=10006555&utm_id=NA-SkillsNetwork-Channel-SkillsNetworkCoursesIBMDeveloperSkillsNetworkML0101ENSkillsNetwork1047-2023-01-01)\n",
        "\n",
        "- **MODELYEAR** e.g. 2014\n",
        "- **MAKE** e.g. Acura\n",
        "- **MODEL** e.g. ILX\n",
        "- **VEHICLE CLASS** e.g. SUV\n",
        "- **ENGINE SIZE** e.g. 4.7\n",
        "- **CYLINDERS** e.g 6\n",
        "- **TRANSMISSION** e.g. A6\n",
        "- **FUEL CONSUMPTION in CITY(L/100 km)** e.g. 9.9\n",
        "- **FUEL CONSUMPTION in HWY (L/100 km)** e.g. 8.9\n",
        "- **FUEL CONSUMPTION COMB (L/100 km)** e.g. 9.2\n",
        "- **CO2 EMISSIONS (g/km)** e.g. 182   --> low --> 0\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "button": false,
        "new_sheet": false,
        "run_control": {
          "read_only": false
        },
        "id": "IFMOJMWF-vx-"
      },
      "source": [
        "## Reading the data in\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 3,
      "metadata": {
        "button": false,
        "new_sheet": false,
        "run_control": {
          "read_only": false
        },
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "L0FjXVWI-vx-",
        "outputId": "aa31f470-5869-47b5-b286-601a3a08f4c5"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<bound method DataFrame.count of       MODELYEAR   MAKE       MODEL    VEHICLECLASS  ENGINESIZE  CYLINDERS  \\\n",
              "0          2014  ACURA         ILX         COMPACT         2.0          4   \n",
              "1          2014  ACURA         ILX         COMPACT         2.4          4   \n",
              "2          2014  ACURA  ILX HYBRID         COMPACT         1.5          4   \n",
              "3          2014  ACURA     MDX 4WD     SUV - SMALL         3.5          6   \n",
              "4          2014  ACURA     RDX AWD     SUV - SMALL         3.5          6   \n",
              "...         ...    ...         ...             ...         ...        ...   \n",
              "1062       2014  VOLVO    XC60 AWD     SUV - SMALL         3.0          6   \n",
              "1063       2014  VOLVO    XC60 AWD     SUV - SMALL         3.2          6   \n",
              "1064       2014  VOLVO    XC70 AWD     SUV - SMALL         3.0          6   \n",
              "1065       2014  VOLVO    XC70 AWD     SUV - SMALL         3.2          6   \n",
              "1066       2014  VOLVO    XC90 AWD  SUV - STANDARD         3.2          6   \n",
              "\n",
              "     TRANSMISSION FUELTYPE  FUELCONSUMPTION_CITY  FUELCONSUMPTION_HWY  \\\n",
              "0             AS5        Z                   9.9                  6.7   \n",
              "1              M6        Z                  11.2                  7.7   \n",
              "2             AV7        Z                   6.0                  5.8   \n",
              "3             AS6        Z                  12.7                  9.1   \n",
              "4             AS6        Z                  12.1                  8.7   \n",
              "...           ...      ...                   ...                  ...   \n",
              "1062          AS6        X                  13.4                  9.8   \n",
              "1063          AS6        X                  13.2                  9.5   \n",
              "1064          AS6        X                  13.4                  9.8   \n",
              "1065          AS6        X                  12.9                  9.3   \n",
              "1066          AS6        X                  14.9                 10.2   \n",
              "\n",
              "      FUELCONSUMPTION_COMB  FUELCONSUMPTION_COMB_MPG  CO2EMISSIONS  \n",
              "0                      8.5                        33           196  \n",
              "1                      9.6                        29           221  \n",
              "2                      5.9                        48           136  \n",
              "3                     11.1                        25           255  \n",
              "4                     10.6                        27           244  \n",
              "...                    ...                       ...           ...  \n",
              "1062                  11.8                        24           271  \n",
              "1063                  11.5                        25           264  \n",
              "1064                  11.8                        24           271  \n",
              "1065                  11.3                        25           260  \n",
              "1066                  12.8                        22           294  \n",
              "\n",
              "[1067 rows x 13 columns]>"
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ],
      "source": [
        "df = pd.read_csv(\"FuelConsumption.csv\")\n",
        "\n",
        "# Let's take a look at the dataset\n",
        "df.count\n",
        "\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "button": false,
        "new_sheet": false,
        "run_control": {
          "read_only": false
        },
        "id": "aXwngWGZ-vx-"
      },
      "source": [
        "### Data Exploration\n",
        "Let's first have a descriptive exploration on our data.\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 7,
      "metadata": {
        "button": false,
        "new_sheet": false,
        "run_control": {
          "read_only": false
        },
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "jqHcDEqR-vx_",
        "outputId": "8d1b04f5-fd2f-485c-fe8e-ef258466a94a"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       MODELYEAR   ENGINESIZE    CYLINDERS  FUELCONSUMPTION_CITY  \\\n",
              "count     1067.0  1067.000000  1067.000000           1067.000000   \n",
              "mean      2014.0     3.346298     5.794752             13.296532   \n",
              "std          0.0     1.415895     1.797447              4.101253   \n",
              "min       2014.0     1.000000     3.000000              4.600000   \n",
              "25%       2014.0     2.000000     4.000000             10.250000   \n",
              "50%       2014.0     3.400000     6.000000             12.600000   \n",
              "75%       2014.0     4.300000     8.000000             15.550000   \n",
              "max       2014.0     8.400000    12.000000             30.200000   \n",
              "\n",
              "       FUELCONSUMPTION_HWY  FUELCONSUMPTION_COMB  FUELCONSUMPTION_COMB_MPG  \\\n",
              "count          1067.000000           1067.000000               1067.000000   \n",
              "mean              9.474602             11.580881                 26.441425   \n",
              "std               2.794510              3.485595                  7.468702   \n",
              "min               4.900000              4.700000                 11.000000   \n",
              "25%               7.500000              9.000000                 21.000000   \n",
              "50%               8.800000             10.900000                 26.000000   \n",
              "75%              10.850000             13.350000                 31.000000   \n",
              "max              20.500000             25.800000                 60.000000   \n",
              "\n",
              "       CO2EMISSIONS  \n",
              "count   1067.000000  \n",
              "mean     256.228679  \n",
              "std       63.372304  \n",
              "min      108.000000  \n",
              "25%      207.000000  \n",
              "50%      251.000000  \n",
              "75%      294.000000  \n",
              "max      488.000000  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-89b4767d-98d7-4525-a68f-57925f67db54\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>MODELYEAR</th>\n",
              "      <th>ENGINESIZE</th>\n",
              "      <th>CYLINDERS</th>\n",
              "      <th>FUELCONSUMPTION_CITY</th>\n",
              "      <th>FUELCONSUMPTION_HWY</th>\n",
              "      <th>FUELCONSUMPTION_COMB</th>\n",
              "      <th>FUELCONSUMPTION_COMB_MPG</th>\n",
              "      <th>CO2EMISSIONS</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>1067.0</td>\n",
              "      <td>1067.000000</td>\n",
              "      <td>1067.000000</td>\n",
              "      <td>1067.000000</td>\n",
              "      <td>1067.000000</td>\n",
              "      <td>1067.000000</td>\n",
              "      <td>1067.000000</td>\n",
              "      <td>1067.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>2014.0</td>\n",
              "      <td>3.346298</td>\n",
              "      <td>5.794752</td>\n",
              "      <td>13.296532</td>\n",
              "      <td>9.474602</td>\n",
              "      <td>11.580881</td>\n",
              "      <td>26.441425</td>\n",
              "      <td>256.228679</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>0.0</td>\n",
              "      <td>1.415895</td>\n",
              "      <td>1.797447</td>\n",
              "      <td>4.101253</td>\n",
              "      <td>2.794510</td>\n",
              "      <td>3.485595</td>\n",
              "      <td>7.468702</td>\n",
              "      <td>63.372304</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>2014.0</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>3.000000</td>\n",
              "      <td>4.600000</td>\n",
              "      <td>4.900000</td>\n",
              "      <td>4.700000</td>\n",
              "      <td>11.000000</td>\n",
              "      <td>108.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>2014.0</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>4.000000</td>\n",
              "      <td>10.250000</td>\n",
              "      <td>7.500000</td>\n",
              "      <td>9.000000</td>\n",
              "      <td>21.000000</td>\n",
              "      <td>207.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>2014.0</td>\n",
              "      <td>3.400000</td>\n",
              "      <td>6.000000</td>\n",
              "      <td>12.600000</td>\n",
              "      <td>8.800000</td>\n",
              "      <td>10.900000</td>\n",
              "      <td>26.000000</td>\n",
              "      <td>251.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>2014.0</td>\n",
              "      <td>4.300000</td>\n",
              "      <td>8.000000</td>\n",
              "      <td>15.550000</td>\n",
              "      <td>10.850000</td>\n",
              "      <td>13.350000</td>\n",
              "      <td>31.000000</td>\n",
              "      <td>294.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>2014.0</td>\n",
              "      <td>8.400000</td>\n",
              "      <td>12.000000</td>\n",
              "      <td>30.200000</td>\n",
              "      <td>20.500000</td>\n",
              "      <td>25.800000</td>\n",
              "      <td>60.000000</td>\n",
              "      <td>488.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-89b4767d-98d7-4525-a68f-57925f67db54')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-89b4767d-98d7-4525-a68f-57925f67db54 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-89b4767d-98d7-4525-a68f-57925f67db54');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-646f6fc7-b119-40cc-83e4-4565bfcf6ecc\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-646f6fc7-b119-40cc-83e4-4565bfcf6ecc')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-646f6fc7-b119-40cc-83e4-4565bfcf6ecc button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ],
      "source": [
        "# summarize the data\n",
        "df.describe()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Fug-dlU_-vx_"
      },
      "source": [
        "Let's select some features to explore more.\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 4,
      "metadata": {
        "button": false,
        "new_sheet": false,
        "run_control": {
          "read_only": false
        },
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 332
        },
        "id": "_WuDKI6Z-vx_",
        "outputId": "f3f8e694-187d-4d0b-9ffb-e658a4bfcd26"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   ENGINESIZE  CYLINDERS  FUELCONSUMPTION_COMB  CO2EMISSIONS\n",
              "0         2.0          4                   8.5           196\n",
              "1         2.4          4                   9.6           221\n",
              "2         1.5          4                   5.9           136\n",
              "3         3.5          6                  11.1           255\n",
              "4         3.5          6                  10.6           244\n",
              "5         3.5          6                  10.0           230\n",
              "6         3.5          6                  10.1           232\n",
              "7         3.7          6                  11.1           255\n",
              "8         3.7          6                  11.6           267"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-78274d3d-e540-4bd1-a38d-c96ec682cc93\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ENGINESIZE</th>\n",
              "      <th>CYLINDERS</th>\n",
              "      <th>FUELCONSUMPTION_COMB</th>\n",
              "      <th>CO2EMISSIONS</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2.0</td>\n",
              "      <td>4</td>\n",
              "      <td>8.5</td>\n",
              "      <td>196</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2.4</td>\n",
              "      <td>4</td>\n",
              "      <td>9.6</td>\n",
              "      <td>221</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1.5</td>\n",
              "      <td>4</td>\n",
              "      <td>5.9</td>\n",
              "      <td>136</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3.5</td>\n",
              "      <td>6</td>\n",
              "      <td>11.1</td>\n",
              "      <td>255</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>3.5</td>\n",
              "      <td>6</td>\n",
              "      <td>10.6</td>\n",
              "      <td>244</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>3.5</td>\n",
              "      <td>6</td>\n",
              "      <td>10.0</td>\n",
              "      <td>230</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>3.5</td>\n",
              "      <td>6</td>\n",
              "      <td>10.1</td>\n",
              "      <td>232</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>3.7</td>\n",
              "      <td>6</td>\n",
              "      <td>11.1</td>\n",
              "      <td>255</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>3.7</td>\n",
              "      <td>6</td>\n",
              "      <td>11.6</td>\n",
              "      <td>267</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-78274d3d-e540-4bd1-a38d-c96ec682cc93')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-78274d3d-e540-4bd1-a38d-c96ec682cc93 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-78274d3d-e540-4bd1-a38d-c96ec682cc93');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-a6da337e-92bf-44ec-881f-a7d714603d13\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a6da337e-92bf-44ec-881f-a7d714603d13')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-a6da337e-92bf-44ec-881f-a7d714603d13 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 4
        }
      ],
      "source": [
        "cdf = df[['ENGINESIZE','CYLINDERS','FUELCONSUMPTION_COMB','CO2EMISSIONS']]\n",
        "cdf.head(9)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "kUdo4VQc-vx_"
      },
      "source": [
        "We can plot each of these features:\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 5,
      "metadata": {
        "button": false,
        "new_sheet": false,
        "run_control": {
          "read_only": false
        },
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 452
        },
        "id": "hqot94_F-vx_",
        "outputId": "ae32146d-ecfe-4339-8fc8-122c9d0220d8"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 4 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "viz = cdf[['CYLINDERS','ENGINESIZE','CO2EMISSIONS','FUELCONSUMPTION_COMB']]\n",
        "viz.hist()\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "7-Eo90gf-vyA"
      },
      "source": [
        "Now, let's plot each of these features against the Emission, to see how linear their relationship is:\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 10,
      "metadata": {
        "button": false,
        "new_sheet": false,
        "run_control": {
          "read_only": false
        },
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 449
        },
        "id": "7cFBSmP_-vyA",
        "outputId": "87635774-5710-40eb-94c1-8e67544c65dc"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "plt.scatter(cdf.FUELCONSUMPTION_COMB, cdf.CO2EMISSIONS,  color='blue')\n",
        "plt.xlabel(\"FUELCONSUMPTION_COMB\")\n",
        "plt.ylabel(\"Emission\")\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 11,
      "metadata": {
        "button": false,
        "new_sheet": false,
        "run_control": {
          "read_only": false
        },
        "scrolled": true,
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 449
        },
        "id": "4wWju6Lk-vyA",
        "outputId": "424de31a-e7d7-4796-d14f-dc1d40c98424"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "plt.scatter(cdf.ENGINESIZE, cdf.CO2EMISSIONS,  color='blue')\n",
        "plt.xlabel(\"Engine size\")\n",
        "plt.ylabel(\"Emission\")\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 12,
      "metadata": {
        "button": false,
        "new_sheet": false,
        "run_control": {
          "read_only": false
        },
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 449
        },
        "id": "yh9UOOAg-vyA",
        "outputId": "8332483c-a34b-404d-8c74-b685ba9350c6"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "plt.scatter(cdf.CYLINDERS, cdf.CO2EMISSIONS,  color='blue')\n",
        "plt.xlabel(\"Cylinders\")\n",
        "plt.ylabel(\"Emission\")\n",
        "plt.show()\n",
        "\n",
        "\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "button": false,
        "new_sheet": false,
        "run_control": {
          "read_only": false
        },
        "id": "Ry5VMK-O-vyB"
      },
      "source": [
        "#### Creating train and test dataset\n",
        "The Train/Test Split method involves dividing the dataset into two exclusive sets: one for training and one for testing. This separation ensures a more accurate assessment of out-of-sample accuracy since the testing set is entirely distinct from the training data. Consequently, it allows us to gauge how well the model generalizes to new data.\n",
        "\n",
        "In essence, the testing dataset provides an unbiased evaluation as the model has no prior knowledge of its outcomes. We'll split our dataset into 80% for training and 20% for testing using __np.random.rand()__ for random row selection.\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 6,
      "metadata": {
        "button": false,
        "new_sheet": false,
        "run_control": {
          "read_only": false
        },
        "id": "PK20iYHT-vyB"
      },
      "outputs": [],
      "source": [
        "msk = np.random.rand(len(df)) < 0.8\n",
        "train = cdf[msk]\n",
        "test = cdf[~msk]"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "button": false,
        "new_sheet": false,
        "run_control": {
          "read_only": false
        },
        "id": "yeTB8cqM-vyB"
      },
      "source": [
        "### Simple Regression Model\n",
        "\n",
        "Linear Regression fits a linear model with coefficients B = (B1, ..., Bn) in order to minimize the '**residual sum of squares**' between the actual dataset values represented by **y** and the predicted values denoted as **y-hat**, achieved through a linear approximation.\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "button": false,
        "new_sheet": false,
        "run_control": {
          "read_only": false
        },
        "id": "Tz6YkkxL-vyB"
      },
      "source": [
        "#### Train data distribution\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 14,
      "metadata": {
        "button": false,
        "new_sheet": false,
        "run_control": {
          "read_only": false
        },
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 453
        },
        "id": "JZz_sRpD-vyB",
        "outputId": "5098c393-5cb7-4231-fc7c-5226cdab14d0"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "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VdF8z4qi4MSJE8jKykJcXOAF5hzZARAXF4fs7GzLzp+SkhJ1f4FCxXtuGHjPDQPvuWGI1nsONqKjith9doiIiIjMwGCHiIiIYhqDHQslJCTgoYcealB1uHjPDQPvuWHgPTcMDeGemaBMREREMY0jO0RERBTTGOwQERFRTGOwQ0RERDGNwQ4RERHFNAY7Fvj0009x7bXXIisrCw6HA8uXL7e7S5abO3cuevXqheTkZKSnp2PkyJHYvXu33d2y1OLFi9GjRw/3Rly5ubn48MMP7e5W2Dz++ONwOByYPn263V2x1J///Gc4HA6vR5cuXezulqUOHTqEm266CWlpaUhMTET37t2xbds2u7tlqfbt29f7PTscDuTl5dndNUu4XC488MAD6NChAxITE9GxY0f85S9/0awxFa24g7IFTp48iYsuugi33HILRo0aZXd3wmLDhg3Iy8tDr169UFNTg3vvvReDBw/Gt99+i6ZNm9rdPUtkZ2fj8ccfR6dOnaAoCl599VWMGDEC//73v3HhhRfa3T1Lbd26FS+++CJ69Ohhd1fC4sILL8TatWvdPzdqFLv/6/zvf/+LK664AgMGDMCHH36I1q1bY8+ePWjRooXdXbPU1q1b4XK53D9/8803uPrqq/E///M/NvbKOk888QQWL16MV199FRdeeCG2bduGP/7xj0hNTcUdd9xhd/dMF7v/xdpo2LBhGDZsmN3dCKuPPvrI6+clS5YgPT0d27dvx1VXXWVTr6x17bXXev386KOPYvHixfj8889jOtiprKzEuHHj8Le//Q1z5syxuzth0ahRI2RmZtrdjbB44oknkJOTg1deecV9rEOHDjb2KDxat27t9fPjjz+Ojh07ol+/fjb1yFqbNm3CiBEjMHz4cABiZGvp0qXYsmWLzT2zBqexyBLl5eUAgJYtW9rck/BwuVx46623cPLkSeTm5trdHUvl5eVh+PDhGDRokN1dCZs9e/YgKysL5557LsaNG4eDBw/a3SXLvP/++7j00kvxP//zP0hPT0fPnj3xt7/9ze5uhVV1dTXeeOMN3HLLLaYWh44kffr0wbp16/D9998DAL766iv861//itl/qHNkh0xXW1uL6dOn44orrkC3bt3s7o6ldu7cidzcXJw5cwbNmjXDe++9h65du9rdLcu89dZb+PLLL7F161a7uxI2vXv3xpIlS9C5c2ccOXIEDz/8MPr27YtvvvkGycnJdnfPdD/88AMWL16MmTNn4t5778XWrVtxxx13ID4+HhMnTrS7e2GxfPlyHD9+HDfffLPdXbHMPffcg4qKCnTp0gVOpxMulwuPPvooxo0bZ3fXLMFgh0yXl5eHb775Bv/617/s7orlOnfujB07dqC8vBzvvvsuJk6ciA0bNsRkwFNSUoJp06ZhzZo1aNKkid3dCRvPf+n26NEDvXv3Rrt27fD2229j0qRJNvbMGrW1tbj00kvx2GOPAQB69uyJb775Bi+88EKDCXb+/ve/Y9iwYcjKyrK7K5Z5++238eabb6KwsBAXXnghduzYgenTpyMrKysmf88MdshU+fn5WLlyJT799FNkZ2fb3R3LxcfH47zzzgMAXHLJJdi6dSuefvppvPjiizb3zHzbt29HWVkZLr74Yvcxl8uFTz/9FM899xyqqqrgdDpt7GF4NG/eHOeffz727t1rd1cs0aZNm3rB+gUXXIBly5bZ1KPw+vHHH7F27VoUFRXZ3RVLFRQU4J577sENN9wAAOjevTt+/PFHzJ07l8EOUSCKouD222/He++9h/Xr1zeIhEZ/amtrUVVVZXc3LDFw4EDs3LnT69gf//hHdOnSBXfffXeDCHQAkaC9b98+jB8/3u6uWOKKK66ot23E999/j3bt2tnUo/B65ZVXkJ6e7k7cjVWnTp1CXJx32q7T6URtba1NPbIWgx0LVFZWev2rb//+/dixYwdatmyJtm3b2tgz6+Tl5aGwsBArVqxAcnIySktLAQCpqalITEy0uXfWmD17NoYNG4a2bdvixIkTKCwsxPr167F69Wq7u2aJ5OTkejlYTZs2RVpaWkznZt1111249tpr0a5dOxw+fBgPPfQQnE4nxo4da3fXLDFjxgz06dMHjz32GH7/+99jy5YteOmll/DSSy/Z3TXL1dbW4pVXXsHEiRNjensBQKwmffTRR9G2bVtceOGF+Pe//40FCxbglltusbtr1lDIdMXFxQqAeo+JEyfa3TXL+LtfAMorr7xid9csc8sttyjt2rVT4uPjldatWysDBw5UPv74Y7u7FVb9+vVTpk2bZnc3LPWHP/xBadOmjRIfH6+cc845yh/+8Adl7969dnfLUh988IHSrVs3JSEhQenSpYvy0ksv2d2lsFi9erUCQNm9e7fdXbFcRUWFMm3aNKVt27ZKkyZNlHPPPVe57777lKqqKru7ZgmHosTodolERERE4D47REREFOMY7BAREVFMY7BDREREMY3BDhEREcU0BjtEREQU0xjsEBERUUxjsENEREQxjcEOERERxTQGO0QUVZYsWYLmzZvb2of+/ftj+vTptvaBiORxB2UiMsXNN9+MV199td7xIUOG4KOPPjLtOqdPn8aJEyeQnp5u2jn1OnbsGBo3bozk5GTb+kBE8mK70hkRhdXQoUPxyiuveB1LSEgw9RqJiYm2F5dt2bKlrdcnIn04jUVEpklISEBmZqbXo0WLFu7XHQ4HXn75ZVx//fVISkpCp06d8P7773ud4/3330enTp3QpEkTDBgwAK+++iocDgeOHz8OoP401p///Gf85je/weuvv4727dsjNTUVN9xwA06cOOFuU1tbi7lz56JDhw5ITEzERRddhHfffTfovSxatMjdj4yMDIwZM8b9muc01vr16+FwOOo9br75Znf7FStW4OKLL0aTJk1w7rnn4uGHH0ZNTY3OT5eIjGKwQ0Rh9fDDD+P3v/89vv76a1xzzTUYN24cjh07BgDYv38/xowZg5EjR+Krr77Cn/70J9x3332a59y3bx+WL1+OlStXYuXKldiwYQMef/xx9+tz587Fa6+9hhdeeAG7du3CjBkzcNNNN2HDhg1+z7dt2zbccccdeOSRR7B792589NFHuOqqq/y27dOnD44cOeJ+fPLJJ2jSpIm7/caNGzFhwgRMmzYN3377LV588UUsWbIEjz76qN6PjoiMsrfoOhHFiokTJypOp1Np2rSp1+PRRx91twGg3H///e6fKysrFQDKhx9+qCiKotx9991Kt27dvM573333KQCU//73v4qiKMorr7yipKamul9/6KGHlKSkJKWiosJ9rKCgQOndu7eiKIpy5swZJSkpSdm0aZPXeSdNmqSMHTvW770sW7ZMSUlJ8Tqnp379+inTpk2rd/znn39Wzj33XGXq1KnuYwMHDlQee+wxr3avv/660qZNG7/nJiLzMWeHiEwzYMAALF682OuYb35Ljx493H9u2rQpUlJSUFZWBgDYvXs3evXq5dX+sssu07xu+/btvZKF27Rp4z7n3r17cerUKVx99dVe76murkbPnj39nu/qq69Gu3btcO6552Lo0KEYOnSoe+otkLNnz2L06NFo164dnn76affxr776Cp999pnXSI7L5cKZM2dw6tSpoOckInMw2CEi0zRt2hTnnXde0DaNGzf2+tnhcKC2tjak6wY7Z2VlJQDgn//8J8455xyvdoGSp5OTk/Hll19i/fr1+Pjjj/Hggw/iz3/+M7Zu3Rpw2fttt92GkpISbNmyBY0a1f2vtbKyEg8//DBGjRpV7z1NmjSRvkciMo7BDhFFjM6dO2PVqlVex7Zu3RrSObt27YqEhAQcPHgQ/fr1k35fo0aNMGjQIAwaNAgPPfQQmjdvjk8++cRv0LJgwQK8/fbb2LRpE9LS0rxeu/jii7F7927NIJCIrMNgh4hMU1VVhdLSUq9jjRo1QqtWraTe/6c//QkLFizA3XffjUmTJmHHjh1YsmQJADFaY0RycjLuuusuzJgxA7W1tbjyyitRXl6Ozz77DCkpKZg4cWK996xcuRI//PADrrrqKrRo0QKrVq1CbW0tOnfuXK/t2rVrMWvWLDz//PNo1aqV+/4TExORmpqKBx98EL/73e/Qtm1bjBkzBnFxcfjqq6/wzTffYM6cOYbuiYj04WosIjLNRx99hDZt2ng9rrzySun3d+jQAe+++y6KiorQo0cPLF682L0aK5T9ev7yl7/ggQcewNy5c3HBBRdg6NCh+Oc//4kOHTr4bd+8eXMUFRXht7/9LS644AK88MILWLp0KS688MJ6bf/1r3/B5XJhypQpXvc9bdo0AGJTxZUrV+Ljjz9Gr169cPnll2PhwoVo166d4fshIn24gzIRRbRHH30UL7zwAkpKSuzuChFFKU5jEVFEWbRoEXr16oW0tDR89tlnmD9/PvLz8+3uFhFFMQY7RBRR9uzZgzlz5uDYsWNo27Yt7rzzTsyePdvubhFRFOM0FhEREcU0JigTERFRTGOwQ0RERDGNwQ4RERHFNAY7REREFNMY7BAREVFMY7BDREREMY3BDhEREcU0BjtEREQU0/4/PvIxZvEMggIAAAAASUVORK5CYII=\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "plt.scatter(train.ENGINESIZE, train.CO2EMISSIONS,  color='blue')\n",
        "plt.xlabel(\"Engine size\")\n",
        "plt.ylabel(\"Emission\")\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "button": false,
        "new_sheet": false,
        "run_control": {
          "read_only": false
        },
        "id": "04Q5z5oJ-vyB"
      },
      "source": [
        "#### Modeling\n",
        "Using sklearn package to model data.\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 15,
      "metadata": {
        "button": false,
        "new_sheet": false,
        "run_control": {
          "read_only": false
        },
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "YvWjtYPT-vyC",
        "outputId": "81526904-bdaa-4f5a-8136-90873ed002a1"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Coefficients:  [[39.11489649]]\n",
            "Intercept:  [124.96019697]\n"
          ]
        }
      ],
      "source": [
        "from sklearn import linear_model\n",
        "regr = linear_model.LinearRegression()\n",
        "train_x = np.asanyarray(train[['ENGINESIZE']])\n",
        "train_y = np.asanyarray(train[['CO2EMISSIONS']])\n",
        "regr.fit(train_x, train_y)\n",
        "# The coefficients\n",
        "print ('Coefficients: ', regr.coef_)\n",
        "print ('Intercept: ',regr.intercept_)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "AiK7YvK3-vyC"
      },
      "source": [
        "In simple linear regression, we're familiar with the terms \"**Coefficient**\" and \"**Intercept**,\" which represent the parameters defining the fitted line. In the context of a simple linear regression, which involves just two parameters—the intercept and the slope—scikit-learn can directly compute and estimate these values from our dataset. It's important to emphasize that for this calculation, the entire dataset must be accessible to traverse and determine these parameters.\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "button": false,
        "new_sheet": false,
        "run_control": {
          "read_only": false
        },
        "id": "7PEDWFQi-vyC"
      },
      "source": [
        "#### Plot outputs\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "wB4guuFV-vyC"
      },
      "source": [
        "We can plot the fit line over the data:\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 16,
      "metadata": {
        "button": false,
        "new_sheet": false,
        "run_control": {
          "read_only": false
        },
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 467
        },
        "id": "nvunJfgO-vyC",
        "outputId": "adcd61a9-86fb-4726-f694-53183af1a55c"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0, 0.5, 'Emission')"
            ]
          },
          "metadata": {},
          "execution_count": 16
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "plt.scatter(train.ENGINESIZE, train.CO2EMISSIONS,  color='blue')\n",
        "plt.plot(train_x, regr.coef_[0][0]*train_x + regr.intercept_[0], '-r')\n",
        "plt.xlabel(\"Engine size\")\n",
        "plt.ylabel(\"Emission\")"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "button": false,
        "new_sheet": false,
        "run_control": {
          "read_only": false
        },
        "id": "ZruopFwr-vyC"
      },
      "source": [
        "#### Evaluation\n",
        "We compare the actual values and predicted values to calculate the accuracy of a regression model. Evaluation metrics provide a key role in the development of a model, as it provides insight to areas that require improvement.\n",
        "\n",
        "There are different model evaluation metrics, lets use **MSE** here to calculate the accuracy of our model based on the test set:\n",
        "* **Mean Absolute Error**: It is the mean of the absolute value of the errors. This is the easiest of the metrics to understand since it’s just average error.\n",
        "\n",
        "* **Mean Squared Error (MSE)**: Mean Squared Error (MSE) is the mean of the squared error. It’s more popular than Mean Absolute Error because the focus is geared more towards large errors. This is due to the squared term exponentially increasing larger errors in comparison to smaller ones.\n",
        "\n",
        "* **Root Mean Squared Error (RMSE)**.\n",
        "\n",
        "* **R-squared** is not an error, but rather a popular metric to measure the performance of your regression model. It represents how close the data points are to the fitted regression line. _The higher the R-squared value, the better the model fits your data_. The best possible score is 1.0 and it can be negative (because the model can be arbitrarily worse).\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 17,
      "metadata": {
        "button": false,
        "new_sheet": false,
        "run_control": {
          "read_only": false
        },
        "scrolled": true,
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "3koACVo4-vyD",
        "outputId": "11268b1b-2df0-4da3-d985-d3c9780496ef"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mean absolute error: 24.63\n",
            "Residual sum of squares (MSE): 1155.69\n",
            "R2-score: 0.69\n"
          ]
        }
      ],
      "source": [
        "from sklearn.metrics import r2_score\n",
        "\n",
        "test_x = np.asanyarray(test[['ENGINESIZE']])\n",
        "test_y = np.asanyarray(test[['CO2EMISSIONS']])\n",
        "test_y_ = regr.predict(test_x)\n",
        "\n",
        "print(\"Mean absolute error: %.2f\" % np.mean(np.absolute(test_y_ - test_y)))\n",
        "print(\"Residual sum of squares (MSE): %.2f\" % np.mean((test_y_ - test_y) ** 2))\n",
        "print(\"R2-score: %.2f\" % r2_score(test_y , test_y_) )"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "jpVmX9Fk-vyD"
      },
      "source": [
        "Let's see what the evaluation metrics are if we trained a regression model using the `FUELCONSUMPTION_COMB` feature.\n",
        "\n",
        "Let's select `FUELCONSUMPTION_COMB` as the train_x data from the `train` dataframe, then select `FUELCONSUMPTION_COMB` as the test_x data from the `test` dataframe\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 7,
      "metadata": {
        "id": "D7FTdygL-vyD"
      },
      "outputs": [],
      "source": [
        "train_x = np.asanyarray(train[['FUELCONSUMPTION_COMB']])\n",
        "\n",
        "test_x = np.asanyarray(test[['FUELCONSUMPTION_COMB']])"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "AD3aEp5J-vyD"
      },
      "source": [
        "Now let's train a **Linear Regression Model** using the `train_x` we created and the `train_y` created previously\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 13,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jddSoJyM-vyE",
        "outputId": "7c818547-929e-4828-c697-e09a76d6a200"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Coefficients:  [[16.03872369]]\n",
            "Intercept:  [70.48481157]\n"
          ]
        }
      ],
      "source": [
        "from sklearn import linear_model\n",
        "regr = linear_model.LinearRegression()\n",
        "\n",
        "train_x = np.asanyarray(train[['FUELCONSUMPTION_COMB']])\n",
        "train_y = np.asanyarray(train[['CO2EMISSIONS']])\n",
        "regr.fit(train_x, train_y)\n",
        "# The coefficients\n",
        "print ('Coefficients: ', regr.coef_)\n",
        "print ('Intercept: ',regr.intercept_)\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "7AfpeHvf-vyF"
      },
      "source": [
        "Find the predictions using the model's `predict` function and the `test_x` data\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 10,
      "metadata": {
        "id": "K0AS86il-vyF"
      },
      "outputs": [],
      "source": [
        "predictions = regr.predict(test_x)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "9IoWKg8r-vyF"
      },
      "source": [
        "Finally, we can use the `predictions` and the `test_y` data and find the Mean Absolute Error value using the `np.absolute` and `np.mean` function like done previously\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 17,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_CUuV35U-vyF",
        "outputId": "b0b89fa1-ef10-4586-aeca-5d7c26d86071"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mean absolute error: 20.06\n",
            "Residual sum of squares (MSE): 776.85\n",
            "R2-score: 0.79\n"
          ]
        }
      ],
      "source": [
        "from sklearn.metrics import r2_score\n",
        "test_x = np.asanyarray(test[['FUELCONSUMPTION_COMB']])\n",
        "test_y = np.asanyarray(test[['CO2EMISSIONS']])\n",
        "test_y_ = regr.predict(test_x)\n",
        "print(\"Mean absolute error: %.2f\" % np.mean(np.absolute(test_y_ - test_y)))\n",
        "print(\"Residual sum of squares (MSE): %.2f\" % np.mean((test_y_ - test_y) ** 2))\n",
        "print(\"R2-score: %.2f\" % r2_score(test_y , test_y_) )\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "rkZTZe5O-vyG"
      },
      "source": [
        "\n",
        "## Author\n",
        "**Saeed Aghabozorgi**\n",
        "\n",
        "Editted by\n",
        "\n",
        "**Bilal Sarimeseli**\n",
        "\n",
        "## <h3 align=\"center\"> © IBM Corporation 2020. All rights reserved. <h3/>\n"
      ]
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python",
      "language": "python",
      "name": "conda-env-python-py"
    },
    "language_info": {
      "name": ""
    },
    "colab": {
      "provenance": [],
      "include_colab_link": true
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}